// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  fullname String
  email    String  @unique
  password String
  address  String?
  balance  Int     @default(0)

  role          Role          @default(USER)
  orders        Order[]
  favoriteFoods Food[]        @relation("FavoritedBy")
  transactions  Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Food {
  id     String  @id @default(uuid())
  name   String
  price  Int
  image  String?
  rating Float?
  description String?
  // quantity Int
  // total    Int

  category   Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId String

  favoritedBy User[] @relation("FavoritedBy")
  // orderId       Int         
  // order         Order[]     @relation("OrderItems", fields: [orderId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id              Int    @id @default(autoincrement())
  status          String
  deliveryAddress String
  paymentMethod   String
  total           Int

  user   User   @relation(fields: [userId], references: [id],onDelete: Cascade, onUpdate: Cascade)
  userId String
  // items           Food[]     @relation("OrderItems", fields: [itemsId], references: [id]) 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id    String @id @default(uuid())
  name  String
  image String
  foods Food[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id     Int             @id @default(autoincrement())
  user   User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  amount Int
  type   TransactionType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum TransactionType {
  TOPUP
  ORDER
}
